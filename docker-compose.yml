networks:
  portfolio_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.0.0/16

services:
  portfolio-fe:
    build:
      context: ./frontend
      target: dev
    networks:
      portfolio_network:
        ipv4_address: 172.10.0.2
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/webpack.config.js:/app/webpack.config.js
      - ./frontend/.babelrc:/app/.babelrc
      - ./nginx/ssl/certs:/etc/ssl/certs:ro

  portfolio-be:
    build: ./backend
    networks:
      portfolio_network:
        ipv4_address: 172.10.0.3
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      DOCKER_ENV: true
    depends_on:
      - db

  db:
    image: postgres:15
    restart: unless-stopped
    networks:
      portfolio_network:
        ipv4_address: 172.10.0.4
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  portfolio-nginx:
    image: nginx:1.25
    networks:
      portfolio_network:
        ipv4_address: 172.10.0.5
    depends_on:
      - portfolio-fe
      - portfolio-be
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl/certs:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
      - ./backend/media:/app/media:ro

volumes:
  postgres_data: 